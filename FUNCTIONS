### How to use?

# # get real path to script
# SCRIPT=$(realpath $0)
# SCRIPT_PATH=$(dirname $SCRIPT)
# # load functions
# source $SCRIPT_PATH/FUNCTIONS

# add binary folders to local path
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

# function STRICT {
    # Exit immediately if any command exits with a non-zero status
    set -e

    # When using -E , you can catch the error with trap command and handle it accordingly.
    set -E
    trap 'printf "\033[0;31mFailed on line: $LINENO at command:\033[0m\n$BASH_COMMAND\nexit $?\n"' ERR

    # Treat unset variables as an error and exit immediately
    set -u

    # Causes a pipeline to return the value of the last (rightmost) command to exit with a non-zero status, or zero if all commands exit successfully
    set -o pipefail

    # Print each command as it is executed
    # set -x

    # IFS (Internal Field Separator) variable is used to specify the delimiter(s) used when parsing strings into fields or when splitting strings
    IFS=$'\n\t'
# }

# function COLOR {
    #https://stackoverflow.com/questions/5947742/how-to-change-the-output-color-of-echo-in-linux
    RED='\033[0;31m'
    GREEN='\033[0;32m'
    ORANGE='\033[0;33m'
    NC='\033[0m' # No Color
# }

function WHIPTAIL {
    IFS=$'\n\t'
    local INPUT=("$@")
    local VARIANTS=()

    for ITEM in "${INPUT[@]}"
    do
        VARIANTS+=("$ITEM")
        VARIANTS+=("ON")
    done

    whiptail --separate-output --noitem --checklist "Choose options" 10 35 5 \
        "${VARIANTS[@]}" 3>&1 1>&2 2>&3
}

### How to use?
# for item in $(WHIPTAIL $@)
# do
#     echo "---"
#     echo "$item"
# done
###

function INSTALL {
    for NAME in $*
    do
        local DPKG="dpkg -l | awk '\$2==\"${NAME}\" && \$1==\"ii\" {print \$1,\$2,\$3}'"
        if ! eval "${DPKG} | grep -q ii"
        then
            apt update -y || true
            apt install -y ${NAME}
        fi
        # Проверяем результат
        eval "${DPKG}"
    done
}



